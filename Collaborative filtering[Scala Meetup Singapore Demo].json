{"paragraphs":[{"text":"%md\n# Collaborative Filtering[Explicit Feedback]","dateUpdated":"2017-08-09T15:08:31+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Collaborative Filtering[Explicit Feedback]</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511126_1523910150","id":"20170809-145146_1264742047","dateCreated":"2017-08-09T15:08:31+0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5512"},{"text":"%md\n\n\n\n\n\n\n\n> \"This image shows an example of predicting of the user's rating using collaborative filtering. At first, people rate different items (like videos, images, games). After that, the system is making predictions about user's rating for an item, which the user hasn't rated yet. These predictions are built upon the existing ratings of other users, who have similar ratings with the active user. For instance, in our case the system has made a prediction, that the active user won't like the video.\"\n\n\n![GIF](https://upload.wikimedia.org/wikipedia/commons/thumb/5/52/Collaborative_filtering.gif/300px-Collaborative_filtering.gif)","user":"anonymous","dateUpdated":"2017-08-09T15:10:38+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<blockquote>\n  <p>&ldquo;This image shows an example of predicting of the user&rsquo;s rating using collaborative filtering. At first, people rate different items (like videos, images, games). After that, the system is making predictions about user&rsquo;s rating for an item, which the user hasn&rsquo;t rated yet. These predictions are built upon the existing ratings of other users, who have similar ratings with the active user. For instance, in our case the system has made a prediction, that the active user won&rsquo;t like the video.&rdquo;</p>\n</blockquote>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/52/Collaborative_filtering.gif/300px-Collaborative_filtering.gif\" alt=\"GIF\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511127_1523525401","id":"20170809-150656_1318572134","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-09T15:10:38+0800","dateFinished":"2017-08-09T15:10:38+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5513"},{"text":"%md\n# Collaborative filtering\n> \"Collaborative filtering is commonly used for recommender systems. These techniques aim to fill in the missing entries of a user-item association matrix. spark.ml currently supports model-based collaborative filtering, in which users and products are described by a small set of latent factors that can be used to predict missing entries. spark.ml uses the alternating least squares (ALS) algorithm to learn these latent factors.\" \n\n### The implementation in spark.ml has the following parameters:\n\n* numBlocks is the number of blocks the users and items will be partitioned into in order to parallelize computation (defaults to 10).\n* rank is the number of latent factors in the model (defaults to 10).\n* maxIter is the maximum number of iterations to run (defaults to 10).\n* regParam specifies the regularization parameter in ALS (defaults to 1.0).\n* implicitPrefs specifies whether to use the explicit feedback ALS variant or one adapted for implicit feedback data (defaults to false which means using explicit feedback).\n* alpha is a parameter applicable to the implicit feedback variant of ALS that governs the baseline confidence in preference observations (defaults to 1.0).\n* nonnegative specifies whether or not to use nonnegative constraints for least squares (defaults to false).\n\nNote: The DataFrame-based API for ALS currently only supports integers for user and item ids. Other numeric types are supported for the user and item id columns, but the ids must be within the integer value range.","user":"anonymous","dateUpdated":"2017-08-10T15:49:13+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Collaborative filtering</h1>\n<blockquote>\n  <p>&ldquo;Collaborative filtering is commonly used for recommender systems. These techniques aim to fill in the missing entries of a user-item association matrix. spark.ml currently supports model-based collaborative filtering, in which users and products are described by a small set of latent factors that can be used to predict missing entries. spark.ml uses the alternating least squares (ALS) algorithm to learn these latent factors.&rdquo; </p>\n</blockquote>\n<h3>The implementation in spark.ml has the following parameters:</h3>\n<ul>\n  <li>numBlocks is the number of blocks the users and items will be partitioned into in order to parallelize computation (defaults to 10).</li>\n  <li>rank is the number of latent factors in the model (defaults to 10).</li>\n  <li>maxIter is the maximum number of iterations to run (defaults to 10).</li>\n  <li>regParam specifies the regularization parameter in ALS (defaults to 1.0).</li>\n  <li>implicitPrefs specifies whether to use the explicit feedback ALS variant or one adapted for implicit feedback data (defaults to false which means using explicit feedback).</li>\n  <li>alpha is a parameter applicable to the implicit feedback variant of ALS that governs the baseline confidence in preference observations (defaults to 1.0).</li>\n  <li>nonnegative specifies whether or not to use nonnegative constraints for least squares (defaults to false).</li>\n</ul>\n<p>Note: The DataFrame-based API for ALS currently only supports integers for user and item ids. Other numeric types are supported for the user and item id columns, but the ids must be within the integer value range.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511127_1523525401","id":"20170809-121522_779171755","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:49:13+0800","dateFinished":"2017-08-10T15:49:13+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5514"},{"text":"%md\n\n\n# Million Song Dataset Challenge\n[Kaggle Dataset](https://www.kaggle.com/c/msdchallenge)\n![DatasetImage](https://kaggle2.blob.core.windows.net/competitions/kaggle/2799/logos/front_page.png)","dateUpdated":"2017-08-09T15:08:31+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Million Song Dataset Challenge</h1>\n<p><a href=\"https://www.kaggle.com/c/msdchallenge\">Kaggle Dataset</a><br/><img src=\"https://kaggle2.blob.core.windows.net/competitions/kaggle/2799/logos/front_page.png\" alt=\"DatasetImage\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511127_1523525401","id":"20170809-121220_1423188273","dateCreated":"2017-08-09T15:08:31+0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5515"},{"text":"%md\n\n### Alternating Least Sqaures(ALS)\n\n![ALS](https://mapr.com/ebooks/spark/images/mllib_rec_engine_image005.png)\n\n\nsource: https://mapr.com/ebooks/spark/08-recommendation-engine-spark.html","user":"anonymous","dateUpdated":"2017-08-10T15:41:12+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Alternating Least Sqaures(ALS)</h3>\n<p><img src=\"https://mapr.com/ebooks/spark/images/mllib_rec_engine_image005.png\" alt=\"ALS\" /></p>\n<p>source: <a href=\"https://mapr.com/ebooks/spark/08-recommendation-engine-spark.html\">https://mapr.com/ebooks/spark/08-recommendation-engine-spark.html</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1502350716098_-1118697179","id":"20170810-153836_263767437","dateCreated":"2017-08-10T15:38:36+0800","dateStarted":"2017-08-10T15:41:12+0800","dateFinished":"2017-08-10T15:41:12+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5516"},{"text":"import org.apache.spark.ml.recommendation.ALS \nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n        \nval als = new ALS().setImplicitPrefs(true).setUserCol(\"userId\").setItemCol(\"songId\").setRatingCol(\"plays\")","user":"anonymous","dateUpdated":"2017-08-10T19:54:08+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.recommendation.ALS\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nals: org.apache.spark.ml.recommendation.ALS = als_2ea8d050afb2\n"}]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170808-105403_1258412114","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:54:08+0800","dateFinished":"2017-08-10T19:54:10+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5517"},{"text":"%md\n### Part1: Load Data & Feature Engineering","user":"anonymous","dateUpdated":"2017-08-09T15:12:43+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Part1: Load Data &amp; Feature Engineering</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170809-130733_957645644","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-09T15:12:43+0800","dateFinished":"2017-08-09T15:12:43+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5518"},{"text":"val songs = spark.read.option(\"delimiter\",\" \").option(\"inferschema\",\"true\").csv(\"/home/luxvm/Documents/data/msd/kaggle_songs.txt\").toDF(\"song\",\"songId\")","user":"anonymous","dateUpdated":"2017-08-10T19:54:26+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"songs: org.apache.spark.sql.DataFrame = [song: string, songId: int]\n"}]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170808-110117_1487706001","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:54:26+0800","dateFinished":"2017-08-10T19:54:28+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5519"},{"text":"songs.show()","user":"anonymous","dateUpdated":"2017-08-09T15:13:33+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+------+\n|              song|songId|\n+------------------+------+\n|SOAAADD12AB018A9DD|     1|\n|SOAAADE12A6D4F80CC|     2|\n|SOAAADF12A8C13DF62|     3|\n|SOAAADZ12A8C1334FB|     4|\n|SOAAAFI12A6D4F9C66|     5|\n|SOAAAGK12AB0189572|     6|\n|SOAAAGN12AB017D672|     7|\n|SOAAAGO12A67AE0A0E|     8|\n|SOAAAGP12A6D4F7D1C|     9|\n|SOAAAGQ12A8C1420C8|    10|\n|SOAAAKE12A8C1397E9|    11|\n|SOAAALJ12AB01828B4|    12|\n|SOAAAMT12AB018C9C4|    13|\n|SOAAANN12A8C14425E|    14|\n|SOAAANV12A6D4FB6C4|    15|\n|SOAAAQN12AB01856D3|    16|\n|SOAAAQQ12A8C13785B|    17|\n|SOAAAUY12A8C133A1B|    18|\n|SOAAAWK12A8C134738|    19|\n|SOAAAXN12A8C13A70C|    20|\n+------------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1502262806276_-1292237260","id":"20170809-151326_1609148256","dateCreated":"2017-08-09T15:13:26+0800","dateStarted":"2017-08-09T15:13:33+0800","dateFinished":"2017-08-09T15:13:34+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5520"},{"text":"songs.createOrReplaceTempView(\"songs\")","user":"anonymous","dateUpdated":"2017-08-09T15:13:53+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170808-110249_1547124793","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-09T15:13:53+0800","dateFinished":"2017-08-09T15:13:54+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5521"},{"text":"val users = spark.read.textFile(\"/home/luxvm/Documents/data/msd/kaggle_users.txt\").toDF(\"user\").withColumn(\"userId\",monotonically_increasing_id)","user":"anonymous","dateUpdated":"2017-08-10T19:54:53+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"users: org.apache.spark.sql.DataFrame = [user: string, userId: bigint]\n"}]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170808-110231_1022099474","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:54:53+0800","dateFinished":"2017-08-10T19:54:54+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5522"},{"text":"users.show()","user":"anonymous","dateUpdated":"2017-08-10T15:22:01+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+------+\n|                user|userId|\n+--------------------+------+\n|fd50c4007b68a3737...|     0|\n|d7083f5e1d50c2642...|     1|\n|d68dc6fc252482345...|     2|\n|9be82340a8b5ef323...|     3|\n|841b2394ae3a9febb...|     4|\n|91b8fac7dc5e03f6c...|     5|\n|458833ce4418010e6...|     6|\n|c34670d9c1718361f...|     7|\n|0f40e074aab2c5f47...|     8|\n|ef0d21935a2f8ae90...|     9|\n|fdf6afb5daefb4277...|    10|\n|10cbcd627472477df...|    11|\n|e9dc6b4c2b22aa6dc...|    12|\n|30e4a688e6fc9c8bf...|    13|\n|18ce1da0e1017e31b...|    14|\n|0b254c684efb08fd0...|    15|\n|eda9bc7bcd72d18b9...|    16|\n|da7bc0ec91a21a54f...|    17|\n|3a613180775197cd0...|    18|\n|05b9035fe02ebdf55...|    19|\n+--------------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1502349715563_952585106","id":"20170810-152155_53146729","dateCreated":"2017-08-10T15:21:55+0800","dateStarted":"2017-08-10T15:22:01+0800","dateFinished":"2017-08-10T15:22:02+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5523"},{"text":"users.printSchema()","user":"anonymous","dateUpdated":"2017-08-10T15:22:40+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- user: string (nullable = true)\n |-- userId: long (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1502349732431_-1242392045","id":"20170810-152212_873806569","dateCreated":"2017-08-10T15:22:12+0800","dateStarted":"2017-08-10T15:22:40+0800","dateFinished":"2017-08-10T15:22:41+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5524"},{"text":"val u =  users.withColumn(\"userId\",users.col(\"userId\").cast(\"integer\"))","user":"anonymous","dateUpdated":"2017-08-10T15:22:46+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u: org.apache.spark.sql.DataFrame = [user: string, userId: int]\n"}]},"apps":[],"jobName":"paragraph_1502262511128_1521601656","id":"20170808-110245_1651220354","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:22:46+0800","dateFinished":"2017-08-10T15:22:46+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5525"},{"text":"u.createOrReplaceTempView(\"users\")","user":"anonymous","dateUpdated":"2017-08-10T15:23:04+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1502262511129_1521216908","id":"20170808-110456_403783696","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:23:04+0800","dateFinished":"2017-08-10T15:23:04+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5526"},{"text":"val triplets = spark.read.option(\"delimiter\",\"\\t\").option(\"inferschema\",\"true\").csv(\"/home/luxvm/Documents/data/msd/kaggle_visible_evaluation_triplets.txt\").toDF(\"user\",\"song\",\"plays\")","user":"anonymous","dateUpdated":"2017-08-10T19:55:20+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"triplets: org.apache.spark.sql.DataFrame = [user: string, song: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1502262511129_1521216908","id":"20170808-113254_1275593382","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:55:20+0800","dateFinished":"2017-08-10T19:55:25+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5527"},{"text":"triplets.printSchema()","user":"anonymous","dateUpdated":"2017-08-10T15:23:39+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- user: string (nullable = true)\n |-- song: string (nullable = true)\n |-- plays: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1502262511129_1521216908","id":"20170808-113735_1860323684","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:23:39+0800","dateFinished":"2017-08-10T15:23:39+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5528"},{"text":"val t = triplets.withColumn(\"plays\",triplets.col(\"plays\").cast(\"double\"))","user":"anonymous","dateUpdated":"2017-08-10T15:23:50+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"t: org.apache.spark.sql.DataFrame = [user: string, song: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1502262511129_1521216908","id":"20170808-113401_1289530640","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:23:50+0800","dateFinished":"2017-08-10T15:23:51+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5529"},{"text":"t.printSchema()","user":"anonymous","dateUpdated":"2017-08-10T15:23:54+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- user: string (nullable = true)\n |-- song: string (nullable = true)\n |-- plays: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1502262511135_1520447410","id":"20170808-113811_987115738","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:23:54+0800","dateFinished":"2017-08-10T15:23:55+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5530"},{"text":"t.show()","user":"anonymous","dateUpdated":"2017-08-10T15:44:57+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+------------------+-----+\n|                user|              song|plays|\n+--------------------+------------------+-----+\n|fd50c4007b68a3737...|SOBONKR12A58A7A7E0|  1.0|\n|fd50c4007b68a3737...|SOEGIYH12A6D4FC0E3|  1.0|\n|fd50c4007b68a3737...|SOFLJQZ12A6D4FADA6|  1.0|\n|fd50c4007b68a3737...|SOHTKMO12AB01843B0|  1.0|\n|fd50c4007b68a3737...|SODQZCY12A6D4F9D11|  1.0|\n|fd50c4007b68a3737...|SOXLOQG12AF72A2D55|  1.0|\n|d7083f5e1d50c2642...|SOUVUHC12A67020E3B|  1.0|\n|d7083f5e1d50c2642...|SOUQERE12A58A75633|  1.0|\n|d7083f5e1d50c2642...|SOIPJAX12A8C141A2D|  1.0|\n|d7083f5e1d50c2642...|SOEFCDJ12AB0185FA0|  2.0|\n|d7083f5e1d50c2642...|SOATCSU12A8C13393A|  1.0|\n|d7083f5e1d50c2642...|SOZPZGN12A8C135B45|  1.0|\n|d7083f5e1d50c2642...|SOPFVWP12A6D4FC636|  1.0|\n|d7083f5e1d50c2642...|SOHEKND12A8AE481D0|  1.0|\n|d7083f5e1d50c2642...|SOPSVVG12A8C13B444|  1.0|\n|d7083f5e1d50c2642...|SODSKZZ12AB0188524|  1.0|\n|d7083f5e1d50c2642...|SONZTNP12A8C1321DF|  1.0|\n|d7083f5e1d50c2642...|SOVVLKF12A8C1424F0|  1.0|\n|d7083f5e1d50c2642...|SOMLKZO12AB017F4AE|  1.0|\n|d7083f5e1d50c2642...|SOACRJG12A8C137A8D|  1.0|\n+--------------------+------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1502351088958_-1799180066","id":"20170810-154448_1940377014","dateCreated":"2017-08-10T15:44:48+0800","dateStarted":"2017-08-10T15:44:57+0800","dateFinished":"2017-08-10T15:44:58+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5531"},{"text":"t.createOrReplaceTempView(\"plays\")","user":"anonymous","dateUpdated":"2017-08-10T15:24:01+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1502262511136_1506211700","id":"20170808-113401_1297140830","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:24:01+0800","dateFinished":"2017-08-10T15:24:01+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5532"},{"text":"val plays = spark.sql(\"select userId,songId,plays from plays p join users u on p.user = u.user join songs s on p.song = s.song\")","user":"anonymous","dateUpdated":"2017-08-10T15:24:04+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"plays: org.apache.spark.sql.DataFrame = [userId: int, songId: int ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1502262511136_1506211700","id":"20170808-114024_1269759952","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:24:04+0800","dateFinished":"2017-08-10T15:24:04+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5533"},{"text":"plays.printSchema()","user":"anonymous","dateUpdated":"2017-08-10T15:24:09+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- userId: integer (nullable = false)\n |-- songId: integer (nullable = true)\n |-- plays: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1502262511136_1506211700","id":"20170808-113400_1986038546","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:24:09+0800","dateFinished":"2017-08-10T15:24:10+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5534"},{"text":"%md\n### Part 2: Model training","dateUpdated":"2017-08-09T15:08:31+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Part 2: Model training</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511136_1506211700","id":"20170809-122425_1744468965","dateCreated":"2017-08-09T15:08:31+0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5535"},{"text":"val Array(training, test) = plays.randomSplit(Array(0.7, 0.3))","user":"anonymous","dateUpdated":"2017-08-10T19:56:17+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"training: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userId: int, songId: int ... 1 more field]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userId: int, songId: int ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1502262511137_1505826952","id":"20170808-113359_1692104202","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:56:17+0800","dateFinished":"2017-08-10T19:56:18+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5536"},{"text":"val model = als.fit(training)","user":"anonymous","dateUpdated":"2017-08-10T19:56:43+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.recommendation.ALSModel = als_2ea8d050afb2\n"}]},"apps":[],"jobName":"paragraph_1502262511137_1505826952","id":"20170808-113358_19551918","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:56:43+0800","dateFinished":"2017-08-10T19:58:03+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5537"},{"text":"%md\n### Part 3: Predictions and Tuning","user":"anonymous","dateUpdated":"2017-08-10T15:27:20+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Part 3: Predictions and Tuning</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511143_1505057454","id":"20170809-130845_1784729710","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:27:20+0800","dateFinished":"2017-08-10T15:27:20+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5538"},{"text":"val predictions = model.transform(test).na.drop","user":"anonymous","dateUpdated":"2017-08-10T19:58:49+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [userId: int, songId: int ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1502262511143_1505057454","id":"20170808-113358_1718995225","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:58:49+0800","dateFinished":"2017-08-10T19:58:50+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5539"},{"text":"predictions.show()","user":"anonymous","dateUpdated":"2017-08-10T19:59:53+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+------+-----+-------------+\n|userId|songId|plays|   prediction|\n+------+------+-----+-------------+\n|108016|  1591| 19.0| 6.7368714E-4|\n| 42585|  1591|  1.0| 1.0581687E-5|\n| 55461|  1959|  1.0| 1.4166106E-5|\n| 81348|  2866|  1.0|-2.1991233E-5|\n| 19319|  4818|  1.0| 6.1958344E-6|\n|107546|  4818|  1.0| -8.045065E-8|\n| 42050|  4818|  2.0|1.02227645E-7|\n| 86893|  4818|  1.0|-2.7479058E-7|\n|100256|  4818|  2.0| -9.639454E-6|\n| 78570|  4818|  1.0|-2.5252937E-6|\n|107316|  4818|  1.0| 2.8615544E-4|\n| 33116|  4900|  1.0| 2.1715248E-6|\n| 36543|  4900|  4.0|-4.6069283E-5|\n| 12124|  4900|  1.0|-8.0911286E-7|\n| 26534|  4900|  1.0|-9.3844945E-5|\n| 66864|  4900|  1.0| 4.1532818E-5|\n| 45341|  5156|  2.0| 0.0016891061|\n| 24878|  5156|  6.0| 0.0031635168|\n| 84699|  5156|  1.0| 5.3527014E-4|\n| 45814|  5156|  3.0| 0.0016844366|\n+------+------+-----+-------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1502350053884_405363257","id":"20170810-152733_1010359648","dateCreated":"2017-08-10T15:27:33+0800","dateStarted":"2017-08-10T19:59:53+0800","dateFinished":"2017-08-10T20:00:41+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5540"},{"text":"val evaluator = new RegressionEvaluator().setMetricName(\"mae\").setLabelCol(\"plays\").setPredictionCol(\"prediction\")","user":"anonymous","dateUpdated":"2017-08-10T19:59:23+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"evaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_522df452b218\n"}]},"apps":[],"jobName":"paragraph_1502262511144_1503133709","id":"20170808-113358_2079172125","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T19:59:24+0800","dateFinished":"2017-08-10T19:59:24+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5541"},{"text":"%md\n### Part 4: Evaluation","dateUpdated":"2017-08-09T15:08:31+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Part 4: Evaluation</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1502262511144_1503133709","id":"20170809-130948_1041369171","dateCreated":"2017-08-09T15:08:31+0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5542"},{"text":"val rmse = evaluator.evaluate(predictions)","user":"anonymous","dateUpdated":"2017-08-10T15:28:59+0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rmse: Double = 3.200676196019661\n"}]},"apps":[],"jobName":"paragraph_1502262511144_1503133709","id":"20170808-111110_250009380","dateCreated":"2017-08-09T15:08:31+0800","dateStarted":"2017-08-10T15:28:59+0800","dateFinished":"2017-08-10T15:29:44+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5543"},{"dateUpdated":"2017-08-09T15:08:31+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1502262511144_1503133709","id":"20170808-114503_284256301","dateCreated":"2017-08-09T15:08:31+0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5544"}],"name":"Collaborative filtering[Scala Meetup Singapore Demo]","id":"2CQXA2BA8","angularObjects":{"2CPXK8NVQ:shared_process":[],"2CQPXWWQR:shared_process":[],"2CS958VDH:shared_process":[],"2CSR3NDBJ:shared_process":[],"2CRPCM23B:shared_process":[],"2CPZW2ND6:shared_process":[],"2CQ848JCM:shared_process":[],"2CSMMABT8:shared_process":[],"2CRYYCT31:shared_process":[],"2CQEQHBZ1:shared_process":[],"2CQ5FUJBC:shared_process":[],"2CRZZW7A2:shared_process":[],"2CPFUZK6C:shared_process":[],"2CRDHNW9W:shared_process":[],"2CQNJXJER:shared_process":[],"2CQWDFJZY:shared_process":[],"2CRNUC7VG:shared_process":[],"2CQKK9ET2:shared_process":[],"2CPW4U8ZA:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}